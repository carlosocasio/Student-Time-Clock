# ---------------------------------------------------------------------
# Shell Program created by Carlos Ocasio
# Date: February 24th, 2018
#
# Updated: October 23nd ,  2018
# Purpose: This shell program extracts data from the Student Attendance
# Time Clock and produces three separate CSV files (Absent, Present,
# and Late). The CSV file is then sent via email to:
# dailyattendance@friends-select.org
# ---------------------------------------------------------------------


#!/bin/bash
clear

# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Alias runAttendance 
/usr/bin/mono /home/facilities/software/accuclass/AccuClassDataExchange.exe export friendsselect carloso@friends-select.org C@rlos9933 ~/UpperSchool_Attendance.csv attendance csv


# Alias runSwipe
/usr/bin/mono /home/facilities/software/accuclass/AccuClassDataExchange.exe export friendsselect carloso@friends-select.org C@rlos9933 ~/UpperSchool_Swipes.csv swipes csv


# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# ---------------------------------------------------------------------
# Disable/Enable sending email reports by setting to false/true/carlos
#----------------------------------------------------------------------
active=true

# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx


# ---------------------------------------------------------------------
# Stores today's date to variable dia (Format: 01/01/2018)
# ---------------------------------------------------------------------
dia=`date +"%m/%d/%Y"`


# ---------------------------------------------------------------------
# Stores Month, Day and Year to separate variables after trimming the 
# leading zero in Month and Day (Month: 1, Day: 1, Year: 2018)
# ---------------------------------------------------------------------
month=`echo $dia | awk -F '/' '{print $1}' | sed 's/^0//g'`
day=`echo $dia | awk -F '/' '{print $2}' | sed 's/^0//g'`
year=`echo $dia | awk -F '/' '{print $3}' | sed 's/^0//g'`


# ---------------------------------------------------------------------
# Stores Month, Day and Year with trimmed leading zero to a variable
# called date (Format: 1/1/2018)
# ---------------------------------------------------------------------
date="$month/$day/$year"
echo "Today's date is: $dia"
echo "Modified Date: $date"
echo

#date="9/13/2018"			# Testing purposes: Can use to change date
echo "New date is $date"	        # from present date to any other date

# ---------------------------------------------------------------------
# Prints students that are present to the USAttendance-Present.csv file
# ---------------------------------------------------------------------
cut -d',' -f2,3,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | sort > USAttendance-Present.csv



echo "STUDENT ATTENDANCE - PRESENT" > USAttendance-Present.csv
echo " " >> USAttendance-Present.csv
echo "GRADE LEVEL 9" >> USAttendance-Present.csv 		# Creates a new file to prevent appending new data to old data
gradeLevel=9
while [ $gradeLevel -lt 13 ]	# While Grade 12 has not been reached continue
do

# Sort Students from Grades 9 through Grade 12
if [ $gradeLevel -eq 9 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep present | awk -F ',' '$4==9 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Present.csv 
fi

if [ $gradeLevel -eq 10 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep present | awk -F ',' '$4==10 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Present.csv
fi

if [ $gradeLevel -eq 11 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep present | awk -F ',' '$4==11 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Present.csv
fi

if [ $gradeLevel -eq 12 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep present | awk -F ',' '$4==12 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Present.csv
fi

(( gradeLevel++ )) # Increments gradeLevel variable from Grade 9 through Grade 12

if [ $gradeLevel -eq 10 ]; then 
	echo " " >> USAttendance-Present.csv
	echo "GRADE LEVEL 10" >> USAttendance-Present.csv 
fi

if [ $gradeLevel -eq 11 ]; then
	echo " " >> USAttendance-Present.csv
	echo "GRADE LEVEL 11" >> USAttendance-Present.csv 
fi

if [ $gradeLevel -eq 12 ]; then
	echo " " >> USAttendance-Present.csv
	echo "GRADE LEVEL 12" >> USAttendance-Present.csv 
fi

done





















# ---------------------------------------------------------------------
# Prints students that are late to the USAttendance-Late.csv file
# ---------------------------------------------------------------------
minutes=6												# Iteration starts on the 6th minute of the  hour
signinTime=0											# Variable used to store signin time used to check for student lateness
gradeLevel=9											# Variable used to iterate between grades 9 - 12
echo "STUDENT ATTENDANCE - LATE" > USAttendance-Late.csv
echo " " >> USAttendance-Late.csv
echo "GRADE LEVEL 9" >> USAttendance-Late.csv 			# Creates a new file to prevent appending new data to old data

# Iterates through 8:06 and 8:30 to create list of student that are 
# --- late with time stamp
# ---------------------------------------------------------------------

while [ $gradeLevel -lt 13 ]	# While Grade 12 has not been reached continue
do

while [ $minutes -lt 31 ]		# While 8:30 AM has not been reached continue
do

	# Conditional for Signin Time between 8:06 and 8:09
	#--------------------------------------------------
	if [ $minutes -lt 10 ]; then  # If the time is before 8:10 AM
		signinTime="8:0$minutes"
		#cut -d',' -f2,3,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | sort >> USAttendance-Late.csv
		
		# Sort Students from Grades 9 through Grade 12
		if [ $gradeLevel -eq 9 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==9 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv 
		fi

		if [ $gradeLevel -eq 10 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==10 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi

		if [ $gradeLevel -eq 11 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==11 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv 
		fi

		if [ $gradeLevel -eq 12 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==12 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi

	fi

	# Conditional for Signin Time between 8:10 and 8:30
	# -------------------------------------------------
	if [ $minutes -gt 9 ]; then  # If the time is between 8:10 AM and 8:30 AM
		signinTime="8:$minutes"
		#cut -d',' -f2,3,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | sort >> USAttendance-Late.csv

		# Sort Students from Grades 9 through Grade 12
		if [ $gradeLevel -eq 9 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==9 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi

		if [ $gradeLevel -eq 10 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==10 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi

		if [ $gradeLevel -eq 11 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==11 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi

		if [ $gradeLevel -eq 12 ]; then
			cut -d',' -f2,4,10,12,11 < UpperSchool_Swipes.csv | grep $date | grep $signinTime | awk -F ',' '$4==12 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Late.csv
		fi


	fi
	
	# Increments minutes
	# ------------------
	(( minutes++ ))

done # End Loop for Signin Time from 8:06 AM - 8:30 AM
	

	# Increments Grade Level
	#-----------------------
	(( gradeLevel++ )) # Increments gradeLevel variable from Grade 9 through Grade 12
	minutes=6 # Resets variable back to 8:06 AM for next grade level iteration

	if [ $gradeLevel -eq 10 ]; then 
		echo " " >> USAttendance-Late.csv
		echo "GRADE LEVEL 10" >> USAttendance-Late.csv 
	fi

	if [ $gradeLevel -eq 11 ]; then
		echo " " >> USAttendance-Late.csv
		echo "GRADE LEVEL 11" >> USAttendance-Late.csv 
	fi

	if [ $gradeLevel -eq 12 ]; then
		echo " " >> USAttendance-Late.csv
		echo "GRADE LEVEL 12" >> USAttendance-Late.csv 
	fi

done # End Loop for Grade Level 9 through Grade Level 12 iteration
 














# ---------------------------------------------------------------------
# Prints students that are absent to the USAttendance-Absent.csv file
# ---------------------------------------------------------------------
#cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep absent | grep $date | sort > USAttendance-Absent.csv
#cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep absent | grep $date | sort 



echo "STUDENT ATTENDANCE - ABSENT" > USAttendance-Absent.csv
echo " " >> USAttendance-Absent.csv
echo "GRADE LEVEL 9" >> USAttendance-Absent.csv 		# Creates a new file to prevent appending new data to old data
gradeLevel=9
while [ $gradeLevel -lt 13 ]	# While Grade 12 has not been reached continue
do

# Sort Students from Grades 9 through Grade 12
if [ $gradeLevel -eq 9 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep absent | awk -F ',' '$4==9 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Absent.csv 
fi

if [ $gradeLevel -eq 10 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep absent | awk -F ',' '$4==10 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Absent.csv
fi

if [ $gradeLevel -eq 11 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep absent | awk -F ',' '$4==11 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Absent.csv
fi

if [ $gradeLevel -eq 12 ]; then
	cut -d',' -f6,8,7,5,11,3 < UpperSchool_Attendance.csv | grep $date | grep absent | awk -F ',' '$4==12 {print $5","$3","$2","$1}' | sort -k1 --field-separator="," >> USAttendance-Absent.csv
fi

(( gradeLevel++ )) # Increments gradeLevel variable from Grade 9 through Grade 12

if [ $gradeLevel -eq 10 ]; then 
	echo " " >> USAttendance-Absent.csv
	echo "GRADE LEVEL 10" >> USAttendance-Absent.csv 
fi

if [ $gradeLevel -eq 11 ]; then
	echo " " >> USAttendance-Absent.csv
	echo "GRADE LEVEL 11" >> USAttendance-Absent.csv 
fi

if [ $gradeLevel -eq 12 ]; then
	echo " " >> USAttendance-Absent.csv
	echo "GRADE LEVEL 12" >> USAttendance-Absent.csv 
fi

done



# ---------------------------------------------------------------------
# Send emails with CSV attachments for Student that are Present, Late
# and Absent to dailyattendance@friends-select.org
# ---------------------------------------------------------------------

# Send report to dailyattendance@friends-select.org
if [ "$active" == true ]; then

	sendemail -o tls=yes -f fssstc1@friends-select.org -t dailyattendance@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Present" -m "Attached are students who are Present ..." -a USAttendance-Present.csv

	sendemail -o tls=yes -f fssstc1@friends-select.org -t dailyattendance@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Late" -m "Attached are students who are Late ..." -a USAttendance-Late.csv

	sendemail -o tls=yes -f fssstc1@friends-select.org -t dailyattendance@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Absent" -m "Attached are students who are Absent ..." -a USAttendance-Absent.csv

	echo "Email Reports sent to Daily Attendance"
fi

# Send report to carloso@friends-select.org
if [ "$active" == "carlos" ]; then

	sendemail -o tls=yes -f fssstc1@friends-select.org -t carloso@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Present" -m "Attached are students who are Present ..." -a USAttendance-Present.csv

	sendemail -o tls=yes -f fssstc1@friends-select.org -t carloso@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Late" -m "Attached are students who are Late ..." -a USAttendance-Late.csv

	sendemail -o tls=yes -f fssstc1@friends-select.org -t carloso@friends-select.org -s smtp.gmail.com:25 -xu fssstc1@friends-select.org -xp 1651Fr13nds -u "Upper School Attendance - Absent" -m "Attached are students who are Absent ..." -a USAttendance-Absent.csv

	echo "Email Reports sent to Carlos"
fi


echo "Successful Test Program !"
echo
